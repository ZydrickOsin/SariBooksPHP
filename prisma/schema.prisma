// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id @default(cuid())
  firstName         String
  lastName          String
  email             String     @unique
  passwordHash      String
  isEmailVerified   Boolean    @default(false)
  verificationToken String?
  resetPasswordToken String?
  resetPasswordExpiry DateTime?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  businesses        Business[]
}

model Business {
  id               String   @id @default(cuid())
  name             String
  businessType     String
  businessSize     String?
  industry         String
  businessAddress  String?
  ownerId          String
  owner            User     @relation(fields: [ownerId], references: [id])
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  taxProfile       TaxProfile?
  bookkeepingPreferences BookkeepingPreferences?
}

model TaxProfile {
  id                String   @id @default(cuid())
  tinNumber         String
  vatRegistered     Boolean  @default(false)
  fiscalYearEnd     String
  birRegistrationDate String?
  businessId        String   @unique
  business          Business @relation(fields: [businessId], references: [id], onDelete: Cascade)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model BookkeepingPreferences {
  id                String   @id @default(cuid())
  accountingMethod  String   @default("accrual")
  chartOfAccounts   String   @default("standard")
  currencyPreference String  @default("PHP")
  digitalReceipts   Boolean  @default(true)
  businessId        String   @unique
  business          Business @relation(fields: [businessId], references: [id], onDelete: Cascade)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
